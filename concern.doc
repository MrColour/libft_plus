# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    concern.doc                                        :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: kmira <marvin@42.fr>                       +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/02/24 21:38:32 by kmira             #+#    #+#              #
#    Updated: 2019/02/26 21:07:54 by kmira            ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

Some of these are suggestions/concerns. I can explain my reasoning if
you would like. It is your call if you would like to make changes
and what changes. Ones I consider conplilation mistakes will have '#!',
things I am not sure will have Q, suggestions will have S.

1.) ft_isalnum missing												#!
		;

2.) list_delem														#!
		a) cannot reference head->item if head itself is NULL
		Suggestion: line:47
			if (head && *head && cmp && item_ref)

		b) possible incompatible t_list to int conversion
		from a function with result type 'int'

3.) list_elem_at													S
		a) line:53
			if (head->successor)
				head = head->successor;
			else
				return (NULL);

		b) or you can:
			else
				return (head);
			as the most furthest i-th element.

6.) ft_alpha_to_index												S
		b) if (islower(c))
				return (c - 97);
			else if (isupper(c))
				return (c - 65);
			else
				return (-1);
		c) Note that in the current version non-alpha and non '\''
		characters return the same thing as 'A' and 'a' aka 0.
	
7.) ft_char_to_index
		Similiar things to note 6. Passing '0' returns the same
		thing as '{', '+', etc.

12.) ft_putnbr_base_fd												S
		for ft_validate_base_system(char *base_str):
	
static int		ft_validate_base_system(char *base_str)
{
	short	i;
	short	j;

	if (!base_str || !base_str[0] || !base_str[1])
		return (0);
	i = -1;
	while (base_str[++i])
	{
		count = 0;
		if (!ISPRINT(base_str[i]))
			return (0);
		if (base_str[i] == '+' || base_str[i] == '-')
			return (0);
		j = -1;
		while (++j < i)
			if (base_str[i] == base_str[j])
				return (0);
	}
	return (1);
}

		Note: got rid of variable count.
		Compares if base_str[i] has appeared prior with
		the while condition (j < i). This returns as soon
		as it is known that base_str is invalid.
NOTE TO SELF
	line:64 nbr -= (quotient * col)
	should be the same as nbr = nbr % col;
	'%' operator is less taxing than '*' operator (rumor)

13.) ft_putnbr_base
		Assuming ft_putnbr_base and ft_putnbr_base_fd are the same
		lines 15-66 are unnessecary.

void	ft_putnbr_base(int nbr, char *base)
{
	ft_putnbr_base_fd(int nbr, char *base, 1);
}

14.) ft_putstrtab
		assumes that the table will end with a 0 or '\0'.

15.) btree_getitem
		change to return to NULL for code consistency

16.) hashtab_insert_entry
		new_entry-> just points to the value, doesn't it
		go in a circle? Entry = hashtab 


